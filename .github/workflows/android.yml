# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the Lucas branch
  push:
    branches: [ Lucas ]
  pull_request:
    branches: [ Lucas ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      
      - name: configure amplify
        uses: ambientlight/amplify-cli-action@0.3.0
        with:
          amplify_command: configure
          amplify_env: staging
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-2
      - run: amplify pull --appId d30wx1kvbjtgdy --envName staging
        
      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.8.1'
      - run: |
      
          npm install -g @aws-amplify/cli
          
          AWSCLOUDFORMATIONCONFIG=”{\
          \”configLevel\”:\”project\”,\
          \”useProfile\”:true,\
          \”profileName\”:\”default\”,\
          \"accessKeyId\":\"${{ secrets.AWS_ACCESS_KEY_ID }}\",\
          \"secretAccessKey\":\"${{ secrets.AWS_SECRET_ACCESS_KEY }}\",\
          \"region\":\"us-east-2\"\
          }”
          
          AMPLIFY=”{\
          \”projectName\”:\”SecondChance\”,\
          \”envName\”:\”staging\”,\
          \”defaultEditor\”:\”code\”\
          }”

          
          PROVIDERS=”{\
          \”awscloudformation\”:$AWSCLOUDFORMATIONCONFIG\
          }”
          
          amplify configure project \
          --amplify $AMPLIFY \
          --providers $PROVIDERS
          
          amplify pull --appId d30wx1kvbjtgdy --envName staging
          
          flutter pub get
          flutter build apk
